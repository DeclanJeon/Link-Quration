// 미디어 타입 정의
export type MediaType =
  | 'video'
  | 'audio'
  | 'podcast'
  | 'livestream'
  | 'shorts'
  | 'music'
  | 'audiobook'
  | 'unknown';

// 미디어 플랫폼 정의
export type MediaPlatform =
  | 'youtube'
  | 'vimeo'
  | 'spotify'
  | 'soundcloud'
  | 'apple_podcasts'
  | 'google_podcasts'
  | 'twitch'
  | 'instagram'
  | 'tiktok'
  | 'generic';

// 미디어 품질 정보
export interface MediaQuality {
  resolution?: string; // '1080p', '4K', etc.
  bitrate?: number;
  fps?: number;
  audioQuality?: string; // '128kbps', '320kbps', etc.
  codec?: string;
}

// 타임스탬프 정보
export interface TimeStamp {
  seconds: number;
  formatted: string; // "01:23:45"
}

// 타임라인 세그먼트
export interface TimelineSegment {
  id: string;
  startTime: TimeStamp;
  endTime: TimeStamp;
  duration: number; // seconds
  title: string;
  description: string;
  summary: string;
  keyPoints: string[];
  importance: 'high' | 'medium' | 'low';
  tags: string[];
  thumbnailUrl?: string;
  transcript?: string;
  concepts?: string[]; // Add this line
  difficulty?: 'beginner' | 'intermediate' | 'advanced';
  actionItems?: string[]; // 이 줄 추가
  emotions?: string[]; // 이 줄 추가
  speakingStyle?: string; // 이 줄 추가
  noteWorthy?: string; // 이 줄 추가
}

// 미디어 메타데이터
export interface MediaMetadata {
  id: string;
  title: string;
  description: string;
  duration: number; // seconds
  durationFormatted: string; // "1:23:45"
  thumbnailUrl?: string;
  uploadDate?: string;
  viewCount?: number;
  likeCount?: number;
  channelName?: string;
  channelUrl?: string;
  language?: string;
  subtitles?: SubtitleInfo[];
  quality: MediaQuality;
  platform: MediaPlatform;
  mediaType: MediaType;
  isLive?: boolean;
  category?: string;
}

// 자막 정보
export interface SubtitleInfo {
  language: string;
  languageCode: string;
  isAutoGenerated: boolean;
  url?: string;
}

// 전체 미디어 분석 결과
export interface MediaAnalysisResult {
  metadata: MediaMetadata;
  timeline: TimelineSegment[];
  overallSummary: string;
  keyTopics: string[];
  difficulty: 'beginner' | 'intermediate' | 'advanced';
  targetAudience: string[];
  learningObjectives: string[];
  prerequisites?: string[];
  relatedTopics: string[];
  actionItems: string[];
  notableQuotes: Quote[];
  chapters: Chapter[];
  analysisTimestamp: string;
  aiModel: string;
  confidence: number; // 0-1
}

// 인용구/명언
export interface Quote {
  text: string;
  timestamp: TimeStamp;
  speaker?: string;
  context: string;
  importance: 'high' | 'medium' | 'low';
}

// 챕터 정보
export interface Chapter {
  id: string;
  title: string;
  startTime: TimeStamp;
  endTime: TimeStamp;
  description: string;
  thumbnailUrl?: string;
  keyPoints: string[];
}

// 미디어 분석 요청
export interface MediaAnalysisRequest {
  url: string;
  options?: MediaAnalysisOptions;
}

// 분석 옵션
export interface MediaAnalysisOptions {
  includeTimeline?: boolean;
  includeTranscript?: boolean;
  segmentDuration?: number; // seconds for timeline segments
  language?: string;
  analysisDepth?: 'basic' | 'detailed' | 'comprehensive';
  extractQuotes?: boolean;
  generateChapters?: boolean;
}

// 미디어 감지 결과
export interface MediaDetectionResult {
  isMedia: boolean;
  mediaType: MediaType;
  platform: MediaPlatform;
  mediaId?: string;
  embedUrl?: string;
  directUrl?: string;
  confidence: number;
  supportedFeatures: MediaFeature[];
}

// 지원 기능
export type MediaFeature =
  | 'transcript'
  | 'chapters'
  | 'thumbnails'
  | 'metadata'
  | 'timeline_analysis'
  | 'live_stream'
  | 'subtitles';

// 분석 진행 상태
export interface MediaAnalysisProgress {
  stage: AnalysisStage;
  progress: number; // 0-100
  message: string;
  estimatedTimeRemaining?: number; // seconds
}

export type AnalysisStage =
  | 'detecting'
  | 'extracting_metadata'
  | 'fetching_transcript'
  | 'analyzing_content'
  | 'generating_timeline'
  | 'creating_summary'
  | 'finalizing'
  | 'completed'
  | 'error';

// 에러 타입
export interface MediaAnalysisError {
  code: MediaErrorCode;
  message: string;
  details?: any;
  stage?: AnalysisStage;
}

export type MediaErrorCode =
  | 'UNSUPPORTED_PLATFORM'
  | 'MEDIA_NOT_FOUND'
  | 'TRANSCRIPT_UNAVAILABLE'
  | 'API_LIMIT_EXCEEDED'
  | 'ANALYSIS_FAILED'
  | 'NETWORK_ERROR'
  | 'INVALID_URL';

// 훅에서 사용할 상태 타입
export interface UseMediaAnalysisState {
  isAnalyzing: boolean;
  progress: MediaAnalysisProgress | null;
  result: MediaAnalysisResult | null;
  error: MediaAnalysisError | null;
  detection: MediaDetectionResult | null;
}

// API 응답 타입들
export interface MediaAnalysisApiResponse {
  success: boolean;
  data?: MediaAnalysisResult;
  error?: MediaAnalysisError;
  requestId: string;
}

export interface MediaDetectionApiResponse {
  success: boolean;
  data?: MediaDetectionResult;
  error?: MediaAnalysisError;
}

// 설정 타입
export interface MediaAnalysisConfig {
  enabledPlatforms: MediaPlatform[];
  defaultAnalysisDepth: 'basic' | 'detailed' | 'comprehensive';
  maxDuration: number; // seconds
  autoGenerateChapters: boolean;
  preferredLanguage: string;
  aiModel: string;
}
